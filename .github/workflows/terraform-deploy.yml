name: Terraform Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
      - '.github/workflows/terraform-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/**'
      - '.github/workflows/terraform-deploy.yml'
  workflow_dispatch:
    inputs:
      storage_prefix:
        description: 'Prefix for the Terraform state storage account name'
        required: false
        default: 'dataacademy'
        type: string

env:
  TF_VERSION: '1.0.0'
  WORKING_DIR: './infra'
  STORAGE_PREFIX: ${{ github.event.inputs.storage_prefix || 'dataacademy' }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Make setup script executable
      run: chmod +x ./.github/scripts/setup_terraform_state.sh

    - name: Setup Terraform State Storage
      run: |
        # Ensure infra directory exists
        mkdir -p ${{ github.workspace }}/infra
        
        # Run the setup script
        ./.github/scripts/setup_terraform_state.sh "${{ env.STORAGE_PREFIX }}"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: terraform apply -auto-approve
      working-directory: ${{ env.WORKING_DIR }} 